const globalErrorHandler = (err, req, res, next) => {
  err.statusCode = err.statusCode || 500;
  err.status = err.status || "error";

  /* Errors that are not generated by us but should be operational. */
  if (err.name === "CastError" || err.name === "ValidationError")
    err.isOperational = true;

  /* 1. Production. */
  if (process.env.NODE_ENV == "production") {
    console.error("⚠️ ", err);

    /* 1.1. Operational (generated by us). */
    if (err.isOperational) {
      return res.status(err.statusCode).json({
        status: err.status,
        message: err.message,
      });
    }

    /* 1.2. Not operational (not generated by us). */
    if (!err.isOperational) {
      return res.status(500).json({
        status: "error",
        message: "Something went wrong.",
      });
    }
  } else {
    /* 2. Development and others. */
    return res.status(err.statusCode).json({
      status: err.status,
      message: err.message,
      error: { ...err, stack: err.stack },
    });
  }
};

module.exports = globalErrorHandler;
